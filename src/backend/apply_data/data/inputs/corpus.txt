Suppose you work at a company with several employees. How would you group Alice, Bob, and Charles, who are all developers, and David and Edward, who work in operations, using IAM? (IAM)
Imagine you need to grant specific permissions to your development team. How would you assign a policy to the 'Developers' group that allows them to use and describe EC2 and CloudWatch services? (IAM)
If you have a user who no longer needs access to certain AWS services, what steps would you take to review and adjust their permissions according to the principle of least privilege? (IAM)
Applying Group Policies: Suppose you have a group of developers, Alice, Bob, and Charles, and you attach a policy to this group. How will this policy affect each member of the group? (IAM)
Using Inline Policies: Imagine Fred is a user who does not belong to any group. How would you assign specific permissions to Fred using an inline policy, and what are the benefits of doing this? (IAM)
Managing Multiple Group Policies: If Charles belongs to both the developers' group and the audit team, and each group has its own policy, how will Charles's access be affected by these multiple policies? (IAM)
Implementing a Password Policy: Suppose you want to increase the security of your AWS account. How would you set up a password policy that requires users to change their passwords every 90 days and prevents password reuse? (IAM)
Using MFA for Enhanced Security: Imagine Alice is an administrator with access to sensitive resources. How would enabling MFA protect Alice's account even if her password is compromised? (IAM)
Choosing an MFA Device: Suppose your organization wants to use MFA for all IAM users. What are the different types of MFA devices available, and how would you decide which one to use? (IAM)
Using Different Access Methods: Suppose you need to manage your AWS services. How would you choose between using the Management Console, CLI, and SDK, and what are the security considerations for each method? (IAM)
Generating Access Keys: Imagine you need to set up the CLI on your computer to interact with AWS services. How would you generate and securely manage your access keys? (IAM)
Developing with the SDK: Suppose you are developing an application that needs to interact with AWS services programmatically. How would you use the AWS SDK for Python (Boto) to achieve this, and what are some benefits of using the SDK over other access methods? (IAM)
Using Cloud Shell for Command Execution: Suppose you need to execute AWS CLI commands but prefer not to use your local terminal. How would you set up and use Cloud Shell, and what are the benefits of doing so? (IAM)
Managing Files in Cloud Shell: Imagine you need to create and manage files within Cloud Shell. How would you create a file, ensure its persistence, and download it to your local machine? (IAM)
Customizing Cloud Shell: Suppose you want to improve your Cloud Shell user experience. How would you customize the font size, theme, and manage multiple tabs to enhance your workflow? (IAM)
Using IAM Roles for EC2 Instances: Suppose you need an EC2 Instance to perform actions on AWS. How would you create and assign an IAM Role to this EC2 Instance to allow it to access the necessary services? (IAM) (Roles)
Managing Permissions with IAM Roles: Imagine you have several AWS services, like Lambda functions and CloudFormation, that need to perform actions on your behalf. How would you manage their permissions using IAM Roles? (IAM) (Roles)
Understanding IAM Roles vs. User Permissions: If you are setting up permissions for AWS services, how do IAM Roles differ from regular user permissions, and why are they necessary? (IAM) (Roles)
Managing User Permissions with Security Tools: If you want to maintain tight security and proper permission management in your AWS account, how would you leverage both the IAM Credentials Report and IAM Access Advisor to achieve this? (IAM) (Security)
Launching and Managing Virtual Machines: Suppose you need to deploy a scalable web application. Describe how you would use EC2 instances, EBS volumes, and Elastic Load Balancers to set up and manage the infrastructure. (EC2 Basics)
Selecting an Instance Type for Web Servers: Suppose you need to set up a web server for a moderate-traffic website. Which EC2 instance type would you choose and why? (EC2 Basics)
Optimizing for Compute-Intensive Tasks: Imagine you are running machine learning models that require high computational power. How would you select and configure an appropriate EC2 instance type? (EC2 Basics)
Handling Large In-Memory Databases: Suppose your application requires processing large datasets in memory for real-time analytics. Which EC2 instance type would be best suited for this purpose and why? (EC2 Basics)
Configuring Security Groups for Web Servers: Suppose you need to set up a web server that can be accessed from the internet but also needs to securely transfer files. How would you configure the security group rules, including inbound and outbound traffic? (EC2 Basics)
Ensuring Secure Access for Administrators: Imagine you have multiple EC2 instances that administrators need to access securely. How would you set up security groups to allow SSH access while ensuring unauthorized IP addresses are blocked? (EC2 Basics)
Managing Inter-Instance Communication: Suppose you have several EC2 instances that need to communicate with each other for a load-balanced application. How would you configure security groups to allow secure communication between these instances without relying on IP addresses? (EC2 Basics)
Using SSH for Maintenance on Linux Servers: Suppose you need to connect to a Linux-based EC2 instance for maintenance tasks. How would you securely connect from a Mac or Linux computer? (EC2 Basics)
Accessing EC2 Instances from Windows: Imagine you have a Windows computer and need to connect to your EC2 instance. Which tool should you use to establish this connection? (EC2 Basics)
Browser-Based Connection with EC2 Instance Connect: Suppose you prefer not to use the command line or need a quick connection method that works across different operating systems. Which Amazon tool should you use to access your EC2 instance? (EC2 Basics)
Optimizing Costs for Long-Term Workloads: Suppose you are running a database expected to operate continuously for several years. Which EC2 purchasing option would you choose to optimize costs, and why? (EC2 Basics)
Handling Short-Term, Unpredictable Workloads: Imagine you need to handle short-term, unpredictable workloads where you cannot predict the application behavior. Which EC2 purchasing option is most suitable, and why? (EC2 Basics)
Ensuring High Availability for Critical Applications: Suppose you have critical applications that require guaranteed availability in a specific availability zone. Which EC2 purchasing option would you use to ensure this, and why? (EC2 Basics)
Managing Cost-Effective Batch Jobs: Suppose you have batch jobs that are not time-sensitive but require a lot of computational power. Which EC2 instance purchasing option would you choose to optimize costs, and how would you configure it? (EC2 Basics)
Handling Spot Instance Termination: Imagine you are using spot instances for a data analysis task, and the spot price exceeds your max price. What are your options for handling the termination, and how would you proceed to ensure minimal disruption? (EC2 Basics)
Implementing Spot Fleets for Resilient Workloads: Suppose you need to ensure high availability for a distributed workload while optimizing costs. How would you set up a spot fleet, and which allocation strategy would you choose? (EC2 Basics)
Requesting a Spot Instance: Suppose you need to request a spot instance for a compute-intensive task. What parameters would you set to ensure cost efficiency while meeting your compute requirements? (EC2 Basics)
Managing a Spot Fleet for Cost Savings: Imagine you need to manage a fleet of spot instances to ensure a steady compute capacity for a batch processing job. What allocation strategy and parameters would you choose to optimize cost savings and capacity? (EC2 Basics)
Ensuring Resource Availability with Capacity Reservations: Suppose you need to guarantee the availability of a specific EC2 instance type in a particular availability zone for a critical workload. What purchasing option would you use, and how would you configure it? (EC2 Basics)
Managing Network Access: Suppose you have an EC2 instance that needs to communicate with other instances within a private network and also needs to be accessible from the internet. How would you configure the IP addresses for this instance? (EC2 advanced)
Ensuring Consistent Public Access: Imagine you have a web application running on an EC2 instance that must have a consistent public IP address, even if the instance stops and starts. What solution would you implement to achieve this? (EC2 advanced)
Optimizing Network Architecture: Suppose you need to design a network architecture for a scalable web application on AWS. How would you use public and private IPs, DNS, and load balancers to ensure both internal communication and external accessibility? (EC2 advanced)
Optimizing for High Performance Computing: Suppose you need to run a big data job that requires high networking throughput and low latency between instances. Which placement group strategy would you use, and why? (EC2 advanced)
Ensuring High Availability for Critical Applications: Imagine you have a critical application that must remain available even if some instances fail. Which placement group strategy would you choose to minimize the risk of simultaneous failures, and why? (EC2 advanced)
Scaling Big Data Applications: Suppose you are deploying a big data application like Hadoop or Cassandra that can be partition aware. How would you use partition placement groups to optimize the distribution of your instances and ensure fault tolerance? (EC2 advanced)
Ensuring Network Connectivity for EC2 Instances: Suppose you need to provide network connectivity to an EC2 instance in a specific availability zone. How would you configure the ENI, including its IP addresses and security groups? (EC2 advanced)
Managing Failover for Critical Applications: Imagine you have a critical application running on an EC2 instance that requires a static private IP. How would you use ENIs to ensure failover capability between two instances in the same availability zone? (EC2 advanced)
Optimizing Network Configuration: Suppose you need to attach multiple IP addresses to a single EC2 instance for a multi-homed network setup. How would you configure the ENIs to achieve this, and what are the key considerations? (EC2 advanced)
Maintaining Application State Across Reboots: Suppose you have a long-running application that needs to maintain its in-memory state across reboots to reduce startup time. How would you configure EC2 hibernation to achieve this? (EC2 advanced)
Ensuring Data Persistence on Instance Termination: Imagine you need to ensure certain data volumes persist even if an EC2 instance is terminated. How would you configure the instance and its volumes to achieve this? (EC2 advanced)
Optimizing for Fast Boot Times: Suppose you have an application that takes a long time to initialize and you want to optimize for fast boot times after stopping the instance. How would you leverage EC2 hibernation to meet this requirement? (EC2 advanced)
Data Persistence After Instance Termination: Suppose you need to ensure that the data on your EC2 instance persists even after the instance is terminated. How would you configure your EBS volumes to achieve this? (EC2 Instance Storage)
Managing Storage for High Availability: Imagine you need to set up a failover mechanism for your EC2 instances. How would you use EBS volumes to ensure quick recovery and minimal downtime? (EC2 Instance Storage)
Optimizing Storage Performance: Suppose you need to optimize the performance of your EC2 instance for a high I/O workload. How would you configure your EBS volumes, including capacity and IOPS, to meet this requirement? (EC2 Instance Storage)
Optimizing for High I/O Performance: Suppose you have an application that requires extremely high disk I/O performance. How would you configure your EC2 instance to meet this requirement using an EC2 Instance Store? (EC2 Instance Storage)
Managing Temporary Data Storage: Imagine you need to store temporary data such as a buffer or cache that doesn't need to be retained long-term. How would you use an EC2 Instance Store for this purpose, and what considerations should you keep in mind? (EC2 Instance Storage)
Ensuring Data Durability: Suppose you are using an EC2 Instance Store for high-performance operations but need to ensure data durability. What steps would you take to back up and replicate your data? (EC2 Instance Storage)
Optimizing Storage for a High-Performance Database: Imagine you are running a mission-critical database that requires consistent high IOPS performance. Which EBS volume type would you select to meet these requirements, and how would you configure it? (EC2 Instance Storage)
Cost-Effective Storage for Archive Data: Suppose you need to store a large amount of infrequently accessed archive data at the lowest possible cost. Which EBS volume type would be most suitable, and what are its characteristics? (EC2 Instance Storage)
Encrypting Data for Security Compliance: Suppose you need to ensure that all data stored on your EBS volumes is encrypted to meet security compliance requirements. How would you set up EBS volume encryption, and what benefits does it provide? (EC2 Instance Storage)
Managing Shared Storage for Multiple Instances: Suppose you need a network file system that multiple EC2 instances across different availability zones can access simultaneously. How would you configure and use EFS for this purpose? (EC2 Instance Storage)
Optimizing for Cost and Performance: Imagine you have a mix of frequently and infrequently accessed files. How would you use EFS storage tiers and lifecycle policies to optimize for both cost and performance? (EC2 Instance Storage)
Handling Unpredictable Workloads: Suppose your application has unpredictable storage throughput requirements. How would you configure EFS to automatically scale throughput based on workload demand? (EC2 Instance Storage)
Choosing Storage for a Single EC2 Instance: Suppose you need storage for an application that will run on a single EC2 instance in a specific AZ. Which storage option would you choose between EBS and EFS, and why? (EC2 Instance Storage)
Migrating Data Across Availability Zones: Imagine you need to move your data from an EC2 instance in one AZ to another AZ. How would you use EBS snapshots to accomplish this migration? (EC2 Instance Storage)
Setting Up Shared Storage for Multiple Instances: Suppose you need a shared storage solution for multiple EC2 instances across different AZs. How would you configure EFS to meet this requirement, and what are the benefits of using EFS in this scenario? (EC2 Instance Storage)
Handling Increased Load: Suppose your web application is experiencing a significant increase in traffic, causing slow response times and performance issues. You need to ensure your application can handle this increased load without downtime. How would you scale your infrastructure to address this issue? (High Availability and Scalability)
Ensuring High Availability: Imagine you are running a critical business application that must be available 24/7. To prevent downtime due to hardware failures or data center outages, what strategies would you implement to ensure high availability of your application? (High Availability and Scalability)
Scaling a Call Center: Suppose you manage a call center that receives a fluctuating number of calls throughout the day. During peak hours, the current setup cannot handle the call volume, resulting in long wait times for customers. What approach would you take to scale your call center efficiently to handle varying loads? (High Availability and Scalability)
Routing Traffic to Microservices: Suppose you have multiple microservices running on different EC2 instances, and you want to route traffic based on the URL path. How would you use an Application Load Balancer (ALB) to achieve this? (High Availability and Scalability)
Integrating ALB with Lambda Functions: Imagine you have serverless functions that need to be exposed to the internet. How would you use an ALB to route traffic to these Lambda functions efficiently? (High Availability and Scalability)
Managing On-premises and Cloud Traffic: Suppose you have an application that needs to route traffic to both on-premises servers and EC2 instances based on query string parameters. How would you configure an ALB to handle this? (High Availability and Scalability)
Handling TCP and UDP Traffic: Suppose you have an application that requires handling both TCP and UDP traffic efficiently with high performance. Which type of load balancer would you use and why? (High Availability and Scalability)
Static IP Requirement: Imagine your application must be accessible through a set of static IPs for security reasons. How would you configure the load balancing to meet this requirement? (High Availability and Scalability)
Combining NLB and ALB: Suppose you need the fixed IP benefits of a Network Load Balancer but also require the advanced routing capabilities of an Application Load Balancer. How would you set up the load balancing architecture to leverage both NLB and ALB? (High Availability and Scalability)
Deploying a Firewall for Traffic Inspection: Suppose you need to ensure that all network traffic to your application is inspected by a firewall before reaching the application. How would you use a gateway load balancer to achieve this? (High Availability and Scalability)
Implementing Intrusion Detection and Prevention: Imagine you want to deploy an intrusion detection and prevention system (IDPS) to monitor and block malicious traffic in your network. How would a gateway load balancer facilitate this setup? (High Availability and Scalability)
Managing Traffic Across Multiple Virtual Appliances: Suppose you have multiple virtual appliances that need to process traffic before it reaches your application. How can a gateway load balancer help distribute this traffic efficiently? (High Availability and Scalability)
Ensuring Consistent User Sessions: Suppose you have an application where users need to stay connected to the same backend instance to maintain their session data. How would you implement sticky sessions to achieve this? (High Availability and Scalability)
Managing Session Affinity for Multiple Users: Imagine you run an online service with multiple users accessing your application simultaneously. How can you use sticky sessions to ensure each user's requests are directed to the same EC2 instance? (High Availability and Scalability)
Configuring Load Balancer Stickiness: Suppose you need to configure your load balancer to maintain session stickiness for user requests over a period of one day. How would you set up the load balancer and what type of cookie would you use? (High Availability and Scalability)
Balancing Traffic Across Multiple AZs: Suppose you have an application with EC2 instances spread across multiple availability zones. You want to ensure that the incoming traffic is evenly distributed across all instances, regardless of their AZ. How would you configure cross zone load balancing for this scenario? (High Availability and Scalability)
Handling Imbalanced Traffic Distribution: Imagine your application is experiencing imbalanced traffic due to a different number of EC2 instances in each availability zone. How would you use cross zone load balancing to address this issue and ensure a balanced load? (High Availability and Scalability)
Enabling SSL/TLS for Secure Communication: Suppose you want to ensure secure communication between clients and your load balancer. How would you implement SSL/TLS certificates, and what are the benefits of using ACM for managing these certificates? (High Availability and Scalability)
Configuring SNI for Multiple Domains: Imagine you have multiple domains that need to be served by a single load balancer. How would you configure SNI to handle multiple SSL certificates, and which load balancers support this feature? (High Availability and Scalability)
Handling Expiring SSL Certificates: You have an SSL certificate that is about to expire. What steps would you take to renew the certificate using ACM, and how does ACM simplify the management of certificate expiration and renewal? (High Availability and Scalability)
Handling In-flight Requests During Instance Deregistration: Suppose you have an EC2 instance that needs to be deregistered or marked unhealthy. How would you configure connection draining to ensure that in-flight requests are completed before the instance is taken offline? (High Availability and Scalability)
Optimizing Connection Draining for Short Requests: Imagine your application handles very short requests, typically less than one second. What connection draining parameter would you set to ensure efficient deregistration of instances while maintaining request handling? (High Availability and Scalability)
Managing Variable Traffic Loads: Imagine your e-commerce website experiences high traffic during holidays and sales events but has lower traffic during other times. How would you use an auto scaling group to handle these traffic fluctuations efficiently? (High Availability and Scalability)
Ensuring High Availability: Suppose you have a critical web application that needs to be highly available at all times. How would you configure an auto scaling group and load balancer to ensure that the application can handle server failures without downtime? (High Availability and Scalability)
Optimizing Resource Usage: Your web application is currently over-provisioned, leading to unnecessary costs. How can you use scaling policies and CloudWatch alarms to optimize the number of running instances based on actual usage patterns? (High Availability and Scalability)
Handling Increased Traffic with Dynamic Scaling: Imagine your website experiences a sudden spike in traffic due to a flash sale. How would you use target tracking scaling to ensure your auto scaling group automatically adjusts the number of EC2 instances to handle the increased load? (Auto Scaling Group)
Optimizing Resource Usage with Scheduled Scaling: Suppose your business has predictable traffic patterns, with peak usage during business hours. How would you use scheduled scaling to adjust the capacity of your auto scaling group in anticipation of these patterns? (Auto Scaling Group)
Handling Unpredictable Workloads: Imagine your e-commerce website experiences seasonal spikes in traffic. During these peaks, your database usage increases significantly, risking running out of storage. How would enabling RDS Storage Auto Scaling help you handle this unpredictability without manual intervention? (AWS Fundamentals)
Disaster Recovery with Multi AZ: Your business requires high availability for its critical applications. Describe how setting up RDS with Multi AZ can help ensure that your database remains available even in the event of an availability zone failure. (AWS Fundamentals)
Ensuring High Availability: Your critical application requires high availability and resilience against failures. Describe how setting up RDS with Multi AZ can ensure that your application remains available even if an availability zone goes down. (AWS Fundamentals)
Cost Management for Cross-Region Replication: Imagine your organization needs to replicate a database across regions for global accessibility. Discuss the implications of cross-region replication in terms of network costs and how you would manage them. (AWS Fundamentals)
Customizing Database Settings: Suppose you need to customize the settings of an Oracle database hosted on AWS, including installing patches and enabling native features. Describe how using RDS Custom allows you to achieve this level of customization. (AWS Fundamentals)
Ensuring Database Recovery: Imagine you are about to perform significant customizations on a Microsoft SQL Server database using RDS Custom. Explain why it is important to take a database snapshot before proceeding with these customizations. (AWS Fundamentals)
Scaling Database Reads: Suppose your application’s database is experiencing high read traffic, which is affecting performance. How can using Aurora’s read replicas help alleviate this issue? (AWS Fundamentals)
Ensuring High Availability: Imagine your application requires high availability and cannot afford downtime due to a database instance failure. How does Aurora's automatic failover mechanism help ensure continuous availability? (AWS Fundamentals)
Optimizing Workload with Custom Endpoints: Imagine you have different types of workloads that require different performance levels. How can custom endpoints in Aurora help you manage these workloads? (AWS Fundamentals)
Managing Unpredictable Workloads: Your application has infrequent and unpredictable database usage. How does Aurora Serverless address this need, and what are the cost benefits? (AWS Fundamentals)
Ensuring Disaster Recovery: How does setting up a Global Aurora database help in disaster recovery, and what are the benefits of cross-region replication? (AWS Fundamentals)
Integrating Machine Learning: You want to implement fraud detection in your application without having machine learning expertise. How can Aurora's integration with AWS machine learning services help achieve this? (AWS Fundamentals)
Automating Backups: How can automated backups help you ensure your RDS database data is always recoverable up to five minutes ago? (AWS Fundamentals)
Cost-Effective Database Management: If you only need an RDS database for two hours per month, how can you use manual DB snapshots to save costs? (AWS Fundamentals)
Restoring Databases from S3: How would you restore an on-premises MySQL database backup stored in Amazon S3 to a new RDS MySQL instance? (AWS Fundamentals)
Using IAM Roles for Authentication: How can you authenticate to your RDS database using IAM roles instead of traditional username and password? (AWS Fundamentals)
Securing Network Access: How would you use security groups to control which IP addresses or ports can access your RDS/Aurora database? (AWS Fundamentals)
Auditing Database Activity: How can you enable and retain audit logs for your RDS/Aurora databases to monitor queries and activities over time? (AWS Fundamentals)
Enhancing Database Efficiency: How can RDS Proxy improve the efficiency of your database connections and reduce stress on database resources? (AWS Fundamentals)
Reducing Failover Time: How does RDS Proxy help in reducing the failover time of your RDS database instances? (AWS Fundamentals)
Using IAM for Database Authentication: How can you enforce IAM authentication for your RDS database using RDS Proxy and securely store credentials? (AWS Fundamentals)
Managing Database Connections with Lambda: How can RDS Proxy help manage and pool connections for Lambda functions to prevent connection overload on your RDS database instance? (AWS Fundamentals)
Improving Database Performance: How can using Amazon ElastiCache help reduce the load on your RDS database for read-intensive workloads? (AWS Fundamentals)
Making Applications Stateless: How can you use Amazon ElastiCache to store user session data and make your application stateless? (AWS Fundamentals)
Handling Cache Hits and Misses: How does an application interact with Amazon ElastiCache to handle cache hits and misses, and what are the benefits of this approach? (AWS Fundamentals)
Choosing Between Redis and Memcached: When should you use Redis versus Memcached based on features like high availability, backup, and persistence? (AWS Fundamentals)
Implementing Cache Invalidation: What strategies can you use to ensure that only the most current data is stored in your cache to maintain data accuracy? (AWS Fundamentals)
Implementing Redis AUTH: How can you use Redis AUTH and security groups to secure your Redis cluster? (AWS Fundamentals)
Using SSL for In-Flight Encryption: How does SSL in-flight encryption enhance the security of your data in ElastiCache? (AWS Fundamentals)
Data Loading Patterns: When would you use Lazy Loading, Write Through, or ElastiCache as a session store in your application? (AWS Fundamentals)
Registering a Domain: How would you register a domain name using a domain registrar such as Amazon Route 53 or GoDaddy? (DNS)
Translating Hostnames to IPs: Explain how a DNS translates human-friendly hostnames into IP addresses using an example like www.example.com. (DNS)
Using Local DNS Server: Describe the role of a local DNS server when a user tries to access a website for the first time. (DNS)
Understanding DNS Caching: What is the importance of DNS caching in improving response times for DNS queries? (DNS)
Configuring DNS Records: Describe the process of creating and configuring DNS records in a hosted zone in Route 53 to direct traffic to your EC2 instance. (DNS)
Using Public vs. Private Hosted Zones: Explain the difference between public and private hosted zones in Route 53 and provide an example use case for each. (DNS)
Setting a High TTL for Stability: Suppose you have a stable application with infrequent DNS changes. How would setting a high TTL (e.g., 24 hours) affect your DNS traffic and client experience? (DNS)
Setting a Low TTL for Rapid Updates: Imagine you need to frequently update your DNS records due to dynamic changes in your application. How would setting a low TTL (e.g., 60 seconds) help in this scenario? (DNS)
Mapping a Load Balancer to a Domain: You have a Load Balancer and want to map it to a domain you own (e.g., myapp.mydomain.com). How would you choose between using a CNAME and an Alias record? (DNS)
Handling Root Domains with Alias Records: You need to point a root domain (e.g., mydomain.com) to an AWS resource. How would you configure this using an Alias record? (DNS)
Optimizing DNS Queries with Alias Records: You want to reduce costs and improve DNS query efficiency for your AWS resources. How can Alias records help achieve this? (DNS)
Setting Up Simple Routing Policy (DNS): You have an application and want to route traffic to a single EC2 instance using a simple routing policy. How would you configure this in Route 53?
Using Multiple Values in Simple Routing Policy (DNS): You want to route traffic to multiple IP addresses and have the client pick one randomly. How would you set up this configuration?
Website Backup You are responsible for ensuring the backup and disaster recovery of your company's website. You need to use a scalable storage solution to store backups and set up policies to replicate data to another AWS region. What AWS service will you use, and how will you configure it? (S3 Basics)
Archiving Data Your organization needs to archive large volumes of data that are infrequently accessed but must be retained for several years for compliance reasons. What service and storage class in AWS would be most cost-effective for this purpose? (S3 Basics)
Your company has on-premises storage systems but plans to extend its storage capabilities to the cloud. You need a solution that allows seamless integration between on-premises storage and cloud storage. Which AWS service will you use, and what feature will you leverage? (S3 Basics)
User-Based Security You are tasked with ensuring that only specific users in your organization can access certain S3 buckets. You need to use IAM policies to control which API calls are allowed for specific IAM users. What steps will you take to implement this? (S3 Basics)
Your company needs to grant access to an S3 bucket to a user from another AWS account for a collaborative project. How will you configure the S3 bucket policies to allow cross-account access? (S3 Basics)
You need to make an S3 bucket publicly accessible so that website visitors can access files stored within it. What configuration will you apply to the S3 bucket policy to achieve this, and what security considerations should you keep in mind? (S3 Basics)
Cross-Region Replication for Compliance Your company needs to comply with data regulations that require storing copies of data in multiple geographic regions. How will you set up cross-region replication (CRR) in AWS S3, and what are the key steps involved? (S3 Basics)
Same-Region Replication for Log Aggregation You manage multiple S3 buckets that store logs in the same region. How will you configure same-region replication (SRR) to aggregate these logs into a single bucket for easier analysis? (S3 Basics)
Lower Latency Access Your users experience latency issues accessing data from a single region. How can cross-region replication (CRR) help provide lower latency access to data for users in different geographic locations? (S3 Basics)
Frequently Accessed Data Your team is developing a mobile application that requires frequent access to user data with low latency and high throughput. Which S3 storage class will you choose, and why? (S3 Basics)
Disaster Recovery and Backups Your company needs a cost-effective solution for storing backup data that is infrequently accessed but requires rapid access when needed. Which S3 storage class will you use, and what are the key characteristics? (S3 Basics)
Secondary Backup Storage You have an on-premises backup solution and need a secondary, cost-effective backup in the cloud. You are okay with lower availability as long as the data can be recreated if necessary. Which S3 storage class fits this need? (S3 Basics)
EC2 Application and Thumbnail Management You have an application on EC2 that creates thumbnails from profile photos uploaded to Amazon S3. The thumbnails need to be kept for 60 days and can be easily recreated from the original photos. The source images should be immediately retrievable for 60 days, after which retrieval can take up to six hours. How would you design the storage class transitions and lifecycle rules for this use case? (S3 Advanced)
Recovery of Deleted S3 Objects Your company policy requires that deleted S3 objects should be recoverable immediately for 30 days and within 48 hours for up to 365 days. How would you configure S3 versioning and lifecycle rules to meet this requirement? (S3 Advanced)
Cost Optimization for Infrequent Access Data You need to optimize costs for data that is infrequently accessed but must remain available when needed. Explain how you will transition objects to Standard IA and possibly to Glacier tiers, and the considerations involved. (S3 Advanced)
Cost Management for Large Files You are managing a bucket with very large files that are frequently downloaded by external users. To manage costs effectively, you want to shift the data transfer costs to the users who download the files. How will you configure your S3 bucket to enable Requester Pays, and what are the implications for the users? (S3 Advanced)
Sharing Large Datasets with Other Accounts Your organization needs to share large datasets with multiple AWS accounts. To ensure that the data transfer costs are not borne by your organization, you decide to use the Requester Pays feature. How will you set this up, and what requirements must be met by the requesters? (S3 Advanced)
Storage and Data Transfer Cost Separation You want to understand the financial impact of separating storage costs and data transfer costs for your S3 buckets. Explain how the Requester Pays feature helps achieve this separation and the benefits it provides. (S3 Advanced)
Filtering Specific Event Types You want to set up an S3 Event Notification to only trigger when JPEG images are uploaded to your bucket. How will you configure the event filtering to achieve this, and what are the potential targets you can send these notifications to? (S3 Advanced)
Automating Image Thumbnail Generation You need to automatically generate thumbnails for all images uploaded to your S3 bucket. How will you configure S3 Event Notifications to trigger a Lambda function that creates the thumbnails, and what IAM permissions are required? (S3 Advanced)
Understanding S3 Performance Limits You need to ensure high performance for an application that makes numerous requests to an S3 bucket. Explain the concept of requests per second per prefix and how you can optimize the performance by organizing objects in the bucket. (S3 Advanced)
Efficient Uploads for Large Files Your team is responsible for uploading large files to S3, and you want to optimize the upload process. Describe how you will use multi-part upload for files over 100 MB and explain the benefits of this method. (S3 Advanced)
Accelerating Transfers Across Regions You need to upload a large file from the United States to an S3 bucket in Australia as quickly as possible. How will you utilize S3 Transfer Acceleration, and what is the role of edge locations in this process? (S3 Advanced)
Understanding S3 Performance Limits: You need to ensure high performance for an application that makes numerous requests to an S3 bucket. Explain the concept of requests per second per prefix and how you can optimize the performance by organizing objects in the bucket. (S3 Advanced)
Efficient Uploads for Large Files: Your team is responsible for uploading large files to S3, and you want to optimize the upload process. Describe how you will use multi-part upload for files over 100 MB and explain the benefits of this method. (S3 Advanced)
Reducing Data Transfer with S3 Select: You have a large CSV file stored in S3 and need to retrieve only specific rows and columns based on certain conditions. Explain how using S3 Select can optimize this process and the benefits it provides. (S3 Advanced)
Efficient Data Retrieval from Glacier: You need to retrieve specific records from a large archive stored in Glacier without downloading the entire file. Describe how Glacier Select can be used to achieve this, and what SQL statements you might use for filtering. (S3 Advanced)
Bulk Metadata Modification: You need to modify the metadata of numerous objects stored in your S3 bucket. Explain how you would use S3 Batch Operations to achieve this and the advantages it offers over scripting. (S3 Advanced)
Copying Objects Between Buckets: You need to copy a large number of objects from one S3 bucket to another. How will you use S3 Batch Operations to perform this task efficiently, and what are the key parameters you need to set? (S3 Advanced)
Understanding Storage Across AWS Organization: You need to analyze and optimize storage across your entire AWS Organization to discover anomalies and apply protection best practices. Which AWS service would you use? (S3 Advanced)
Identifying Cost Efficiencies: Your company is looking to optimize storage costs across all S3 buckets by identifying underutilized resources and inefficient storage. Which AWS service provides the necessary metrics and insights? (S3 Advanced)
Encrypting Objects with AWS Managed Keys: You need to ensure that all objects uploaded to your S3 bucket are encrypted using keys managed by AWS. Which server-side encryption method would you use? (S3 Security)
Managing Encryption Keys with KMS: Your organization requires full control over encryption keys and wants to track their usage. Which server-side encryption method should you use, and what AWS service will help manage the keys? (S3 Security)
Encrypting Data Client-Side: You prefer to handle encryption on the client side before uploading data to S3 to maintain full control over the encryption process. What encryption approach will you use? (S3 Security)
Enabling Cross-Origin Requests: You need to configure your S3 bucket to allow a web application hosted on a different domain to access its resources. Which security feature will you use? (S3 Security)
Understanding Same Origin Policy: Explain the concept of the same origin policy and how it relates to web security. Which feature allows web applications to securely request resources from different origins? (S3 Security)
Implementing WORM Model: You need to ensure that objects in your Glacier vault cannot be modified or deleted for compliance reasons. Which feature will you use? (S3 Security)
Locking Policies for Compliance: To meet strict data retention requirements, you need to lock your Glacier Vault so that its policy cannot be changed or deleted. What feature should you implement? (S3 Security)
Choosing Retention Modes: Your organization requires certain objects to be immutable and undeletable by any user, including the root user. Which retention mode will you use in S3 Object Lock? (S3 Security)
Managing Access for Different Data Types: Your S3 bucket contains finance data, sales data, and analytics data. You need to ensure that finance users only access finance data, sales users only access sales data, and analytics users have read-only access to both. Which feature will help you manage this? (S3 Security)
Providing Private Access Through VPC: You want an EC2 instance in your VPC to access your S3 bucket without going through the internet. Which feature allows you to define access points for VPC origin, and what additional configuration is needed? (S3 Security)
Creating Separate Access Points for Teams: Your organization wants to create separate access points for different teams (e.g., finance, sales) to access specific data within an S3 bucket. Which feature should you use to achieve this? (S3 Security)
Dynamic Data Modification: You need to modify objects stored in an S3 bucket dynamically before they are retrieved by an application. Which AWS feature allows you to perform this task without duplicating the objects? (S3 Security)
Redacting Sensitive Data: Your analytics application requires access to data in an S3 bucket, but certain sensitive information must be redacted before retrieval. Which AWS feature will you use to achieve this? (S3 Security)
Improving Global Read Performance: You need to ensure that users around the world experience low latency when accessing your website's content. Which AWS service would you use to cache the content at various global locations? (S3 Security)
Serving Dynamic and Static Content: Your application serves both static and dynamic content. Explain how you would use CloudFront and S3 Replication to optimize performance for both types of content. (S3 Security)
Accessing Content Through Edge Locations: Users in different regions need to access content from an S3 bucket. Describe how CloudFront helps deliver this content efficiently, and what role edge locations play in this process. (S3 Security)
Improving Global Read Performance: You need to ensure that users around the world experience low latency when accessing your website's content. Which AWS service would you use to cache the content at various global locations? (CloudFront)
Securing S3 Bucket Access: You want to ensure that only CloudFront can access your S3 bucket content. Which feature will you use to achieve this? (CloudFront)
Providing DDoS Protection: Your web application needs protection against DDoS attacks. Which AWS service provides this protection while also distributing your content globally? (CloudFront)
Optimizing Costs for Global Content Delivery: Your company needs to deliver content globally but wants to minimize costs. Which CloudFront feature allows you to select edge locations based on pricing to achieve this? (CloudFront)
Balancing Performance and Cost: You want to ensure good performance for your CloudFront distribution without using the most expensive regions. Which price class will you choose to balance performance and cost? (CloudFront)
Maximizing Performance with Global Edge Locations: Your organization requires the best possible performance for content delivery worldwide, regardless of cost. Which CloudFront price class should you select? (CloudFront)
Immediate Content Update: You have updated files in your S3 bucket and want CloudFront to serve the new content immediately, bypassing the TTL. Which feature will you use to invalidate the cached content at edge locations? (CloudFront)
Partial Cache Refresh: You have updated images in a specific directory and need CloudFront to refresh only the images without invalidating the entire cache. How will you specify the path for cache invalidation? (CloudFront)
Ensuring Latest Content Delivery: Your website's index.html file has been updated, and you want to ensure that all users get the latest version immediately. Which CloudFront feature allows you to invalidate this specific file in the cache? (CloudFront)
Improving Performance for Global Users: Your application is deployed in a single AWS region, but you have users worldwide who experience high latency. Which AWS service will help reduce latency by routing traffic through the nearest edge location using Anycast IP? (CloudFront)
Non-HTTP Use Cases Requiring Static IPs: You need to improve the performance of a global gaming application that requires low-latency connections and static IP addresses. Which AWS service is best suited for this use case? (CloudFront)
Ensuring Consistent Performance and Fast Failover: Your global application needs to ensure consistent performance with low latency and have fast regional failover in case of issues. Which AWS service provides intelligent routing and health checks to achieve this? (CloudFront)
Efficient Data Transfer for Large Data Sets: Your organization needs to transfer hundreds of terabytes of data to AWS, but network transfer is too slow and unreliable. Which AWS service and device would you use to perform the data migration? (Snow Family)
Processing Data in Remote Locations: You need to process data in a remote location with limited internet connectivity, such as a mining station underground. Which AWS service and device would allow you to perform edge computing in this scenario? (Snow Family)
Migrating Existing Windows File Server to AWS: Your organization has a Windows File Server on-premises and wants to migrate it to AWS while maintaining compatibility with SMB protocol and Active Directory. Which AWS service will you use? (Snow Family)
High-Performance Computing for Financial Modeling: You need a file system that supports high-performance computing (HPC) for financial modeling and can handle large-scale data processing with low latency. Which AWS service should you choose? (Snow Family)
Extending On-Premises Storage to the Cloud: Your organization has a mix of on-premises and cloud storage and needs to bridge the two for data backup and disaster recovery. Which AWS service and specific gateway would you use to connect on-premises storage to Amazon S3? (Snow Family)
Low-Latency Access to Frequently Used Data: You need to provide low-latency access to frequently accessed data stored in AWS while maintaining a local cache for your on-premises applications. Which AWS service and specific gateway would you use? (Snow Family)
Backing Up Tape Archives to the Cloud: Your company uses a tape-based backup system and wants to transition to a cloud-based solution while maintaining compatibility with existing tape backup processes. Which AWS service and specific gateway would you use to back up tapes to Amazon S3 and Glacier? (Snow Family)
Secure File Transfers to Amazon S3: Your organization needs to securely transfer files to Amazon S3 using a protocol that encrypts data in transit. Which AWS service and protocol would you use? (Snow Family)
Integrating FTP Service with Active Directory: You need to provide FTP access to Amazon EFS for your users and integrate the authentication with your existing Active Directory system. Which AWS service would you choose to achieve this? (Snow Family)
Synchronizing On-Premises Data to AWS S3: Your organization needs to synchronize data from on-premises servers to Amazon S3, including all file permissions and metadata. Which AWS service and protocol would you use to achieve this? (Snow Family)
Scheduled Data Replication Between AWS Services: You need to replicate data between Amazon S3 and Amazon EFS on a daily schedule, ensuring that all metadata is preserved. Which AWS service would you use for this task? (Snow Family)
Data Transfer with Limited Network Capacity: Your company needs to transfer a large amount of data to AWS, but the network capacity is limited. Which AWS service and device would you use to facilitate this transfer? (Snow Family)
Archiving Data to Cold Storage: Your organization needs to archive less frequently accessed data from Amazon S3 to a lower-cost storage class. Which AWS service would you use for this purpose? (Snow Family)
Synchronizing On-Premises Volumes to AWS: You need to back up on-premises server volumes to AWS with scheduled synchronization and metadata preservation. Which AWS service would you choose? (Snow Family)
High-Performance Computing File System for Linux: Your team requires a high-performance file system for a Linux-based HPC workload, compatible with Lustre clients. Which AWS service should you use? (Snow Family)
Handling Sudden Traffic Spikes: Your e-commerce application experiences sudden spikes in purchase activity, which overwhelms the shipping service. Which AWS service would you use to decouple these services and handle the traffic efficiently? (Decoupling Applications)
Real-Time Data Streaming: Your company needs to process a continuous stream of data for real-time analytics. Which AWS service should you use to handle this requirement? (Decoupling Applications)
Distributing Notifications: You need to send notifications to multiple subscribers whenever a new order is placed in your system. Which AWS service would be best suited for this use case? (Decoupling Applications)
Processing Orders Efficiently: Your e-commerce application needs to process orders and ship items without overloading the system during peak times. How can you use AWS services to ensure that order processing and shipping tasks are handled efficiently? (Decoupling Applications)
Scaling Video Processing: You have an application that processes video uploads, which can be resource-intensive and vary in volume. How can you design a system using AWS services to handle the varying load without impacting the user experience? (Decoupling Applications)
Secure Message Handling: You need to ensure that messages sent and received through your SQS queue are encrypted both in transit and at rest. Which AWS features and services will you use to achieve this? (Decoupling Applications)
Ensuring Single Message Processing: Your application needs to ensure that each message is processed exactly once, even if processing takes longer than expected. How can you use AWS services to manage message visibility and avoid duplicate processing? (Decoupling Applications)
Handling Long Processing Times: A consumer in your application sometimes requires more time to process a message than the default visibility timeout allows. What steps can you take to ensure the message remains invisible to other consumers while it is being processed? (Decoupling Applications)
Ensuring Message Order: You have a logging service that must process log entries in the exact order they were generated to maintain data integrity. Which AWS service should you use to guarantee that log messages are processed in the order they were sent? (Decoupling Applications)
Handling Duplicates: Your application sends the same message multiple times by accident. Which AWS service feature can help you ensure that only one copy of each message is processed, even if duplicates are sent within a short timeframe? (Decoupling Applications)
Scaling Auto Scaling Groups: You have an application that experiences variable load, with sudden spikes in traffic. Which AWS service can you use to automatically scale the number of EC2 instances in your Auto Scaling Group based on the number of messages in a queue? (Decoupling Applications)
Buffering Database Writes: During a major sale, your e-commerce application needs to ensure that every order is processed, even if your database is temporarily overloaded. Which AWS service can act as a buffer to ensure all orders are eventually written to the database without being lost? (Decoupling Applications)
Decoupling Notifications: You have a buying service that needs to notify multiple systems (email, fraud detection, shipping, and an SQS queue) whenever a purchase is made. Which AWS service allows you to send a single message that all these systems can receive? (Decoupling Applications)
Handling Multiple Subscribers: Your application needs to broadcast a message to thousands of subscribers whenever a new event occurs. Which AWS service provides a publish-subscribe model that supports millions of subscriptions per topic? (Decoupling Applications)
Integrating with Other AWS Services: You need to trigger a Lambda function, send an email notification, and log an event in a Kinesis Data Firehose stream whenever a specific condition is met in your application. Which AWS service can facilitate this integration? (Decoupling Applications)
Multiple SQS Queue Subscriptions: You have a buying service that needs to send messages to multiple SQS queues without directly writing to each queue. Which AWS services and pattern would you use to achieve this? (Decoupling Applications)
Filtered Message Delivery: Your application sends various order statuses (placed, canceled, declined) to an SNS topic, and you need different SQS queues to receive only specific order statuses. How can you implement this? (Decoupling Applications)
Scaling Data Ingestion: Your application needs to ingest a large amount of streaming data and process it in near real-time. You have many producers sending data and require the ability to replay data for up to a year. Which AWS service and mode would you use to handle this? (Decoupling Applications)
Data Processing with Enhanced Throughput: You have multiple consumers that need to process the same data stream with high throughput and low latency. What feature of Kinesis Data Streams would you enable to meet this requirement? (Decoupling Applications)
Data Transformation and Delivery: Your application needs to send data to Amazon S3 and transform it using a Lambda function before storage. Which service would you use and what configuration options are available to ensure near real-time data delivery? (Decoupling Applications)
Integration with Third-Party Services: Your company uses Datadog for monitoring and you need to stream log data directly from your applications to Datadog. How would you configure Kinesis Data Firehose to achieve this? (Decoupling Applications)
Buffering and Batch Processing: You have a use case where data needs to be processed in batches every 5 minutes and the batch size should be at least 10 MB before sending it to Amazon Redshift. How would you configure Kinesis Data Firehose to meet this requirement? (Decoupling Applications)
Tracking GPS Data of Trucks: Imagine you have 100 trucks on the road, each sending GPS data regularly to AWS. You need to ensure the data is processed in the order it was sent for each truck. How would you use Kinesis Data Streams and partition keys to achieve this? (Decoupling Applications)
Scaling Consumers with SQS FIFO: You need to process messages from multiple sources (e.g., trucks) and want to scale the number of consumers based on the number of sources. How would you use SQS FIFO and group IDs to manage and scale this workload? (Decoupling Applications)
Microservice Architecture with Docker: Explain how Docker can be used to implement a microservice architecture, including the benefits of containerization for maintaining and deploying applications. (Containers on AWS)
Difference Between Docker and Virtual Machines: Compare and contrast Docker containers with virtual machines, focusing on resource sharing, isolation, and typical use cases for each. (Containers on AWS)
Managing Docker Containers on AWS: Describe how to manage Docker containers on AWS using Amazon ECS, Amazon EKS, and AWS Fargate, including the benefits of each service and how they integrate with Docker repositories like Amazon ECR. (Containers on AWS)
Managing Infrastructure with EC2 Launch Type: Explain how to use the EC2 Launch Type in Amazon ECS to provision and maintain infrastructure for Docker containers, including the role of the ECS Agent and EC2 Instance Profiles. (Containers on AWS)
Serverless Container Management with Fargate Launch Type: Describe how the Fargate Launch Type simplifies container management by removing the need to manage EC2 instances, and how to define task definitions to run Docker containers serverlessly. (Containers on AWS)
Integrating Load Balancers with ECS: Discuss the integration of Application Load Balancer (ALB) and Network Load Balancer (NLB) with Amazon ECS for exposing tasks as HTTP/HTTPS endpoints, including the scenarios where each type of load balancer is recommended. (Containers on AWS)
Managing Infrastructure with EC2 Launch Type: Explain how to use the EC2 Launch Type in Amazon ECS to provision and maintain infrastructure for Docker containers, including the role of the ECS Agent and EC2 Instance Profiles. (Containers on AWS)
Serverless Container Management with Fargate Launch Type: Describe how the Fargate Launch Type simplifies container management by removing the need to manage EC2 instances, and how to define task definitions to run Docker containers serverlessly. (Containers on AWS)
How would you design an application architecture that does not require server management? (Serverless)
Which services would you use to build a fully serverless web application? (Serverless)
How can you ensure scalable data processing without provisioning servers? (Serverless)
How would you handle intermittent workloads with minimal cost? (Serverless)
What service would you use to process and transform data streams on-the-fly? (Serverless)
How can you run scheduled tasks without managing servers? (Serverless)
How would you minimize latency for logic execution close to users? (Edge Functions)
Which service would you use to customize CDN content at high scale? (Edge Functions)
How can you manage functions for both viewer and origin requests? (Edge Functions)
What service supports JavaScript for high-scale, latency-sensitive CDN customizations? (Edge Functions)
Managing unpredictable workloads: How would you configure DynamoDB for an application with variable traffic patterns? (Serverless)
Handling large-scale data: What DynamoDB features make it suitable for applications requiring massive data storage and high throughput? (Serverless)
Processing DynamoDB updates in real-time: How would you handle real-time processing of changes in your DynamoDB table? (Serverless)
Implementing cross-region replication: What steps would you take to enable data replication across multiple regions using DynamoDB? (Serverless)
Managing session data with TTL: How would you manage session data to automatically delete it after a certain period? (Serverless)
Performing analytics on DynamoDB data: What process would you use to perform analytics on data stored in DynamoDB? (Serverless)
Exposing Lambda Functions as HTTP Endpoints: How would you enable clients to invoke your Lambda functions via HTTP? (Serverless)
Implementing API Security: What methods can be used to secure your API Gateway? (Data Transfer)
Handling Real-time Data: How would you set up real-time data streaming using API Gateway? (Data Transfer)
How do you choose a database for a write-heavy workload with fluctuating data access patterns? (Data Transfer)
What database options are suitable for a workload requiring strong schema and SQL queries? (Databases)
Which database would you select for a workload involving large object storage and infrequent access? (Databases)
How do you handle search and free text queries in a database? (Databases)
What considerations are important for choosing a database to support a BI and analytics workload? (Databases)
How would you analyze large datasets stored in Amazon S3 without moving the data? (Data Analytics)
What format and techniques would you use to reduce the cost of queries in Athena? (Data Analytics)
How can you set up data partitions in S3 to improve query performance? (Data Analytics)
How would you enable Athena to query data from both S3 and on-premises databases? (Data Analytics)
What are the benefits of using serverless query services like Athena for ad hoc queries and business intelligence? (Data Analytics)
How would you set up an analytics engine that scales to petabytes of data with 10x better performance than other data warehouses? (Data Analytics)
What database would you use to perform fast joins and aggregations for intensive data warehousing? (Data Analytics)
How can you ensure disaster recovery for a Redshift cluster in a single AZ? (Data Analytics)
How would you automate the process of loading data from S3 into Redshift using Kinesis Data Firehose? (Data Analytics)
How would you enable search functionality for partial matches in your application? (Data Analytics)
Which service would you use to perform analytics queries on a non-relational database with flexible indexing? (Data Analytics)
How can you automate the process of ingesting CloudWatch Logs into OpenSearch? (Data Analytics)
What architecture would you use to integrate DynamoDB with OpenSearch for enhanced search capabilities? (Data Analytics)
How can you achieve near real-time data ingestion from Kinesis Data Streams to OpenSearch? (Data Analytics)
How would you create interactive dashboards connected to various data sources? (Data Analytics)
Which QuickSight feature helps prevent some columns from being displayed to certain users? (Data Analytics)
How would you transform and load data from S3 into Redshift? (Data Analytics)
What tool can you use to convert CSV files in S3 to Parquet format for better performance with Athena? (Data Analytics)
How can you automate ETL processes using Glue and Lambda or EventBridge? (Data Analytics)
How would you centralize and manage data from various sources for analytics? (Data Analytics)
What service can help you automate the collection and transformation of data into a data lake? (Data Analytics)
How would you design a serverless pipeline to collect and process data from IoT devices? (Data Analytics)
What service would you use to transform and cleanse data in real-time? (Data Analytics)
How can you query and analyze data stored in an S3 bucket using SQL? (Data Analytics)
How would you monitor the CPU utilization of your EC2 instances? (Monitoring and Auditing)
What service can you use to create a custom metric for memory usage? (Monitoring and Auditing)
How would you store and manage application logs in AWS? (Monitoring and Auditing)
What service would you use to query and analyze log data in CloudWatch Logs? (Monitoring and Auditing)
How can you export CloudWatch Logs to Amazon S3? (Monitoring and Auditing)
Which service can be used for real-time streaming of log data to multiple destinations? (Monitoring and Auditing)
How would you set up a notification system for a breached threshold using CloudWatch? (Monitoring and Auditing)
What would you use to combine multiple metrics into a single alarm? (Monitoring and Auditing)
How can you automate EC2 instance recovery using CloudWatch? (Monitoring and Auditing)
Describe the process to test an alarm notification without breaching a threshold. (Monitoring and Auditing)
How would you schedule a Lambda function to run every hour? (Monitoring and Auditing)
What service can you use to react to specific API calls within your AWS account? (Monitoring and Auditing)
Describe a method to handle events from third-party applications like Zendesk or Datadog. (Monitoring and Auditing)
How would you monitor the performance of your serverless applications? (Monitoring and Auditing)
What service would you use to collect metrics and logs from your ECS containers? (Monitoring and Auditing)
Describe a method to identify the heaviest network users in your VPC. (Monitoring and Auditing)
How can you create an automated dashboard to troubleshoot an application using multiple AWS services? (Monitoring and Auditing)
How would you track who terminated an EC2 instance? (Monitoring and Auditing)
What steps would you take to retain CloudTrail logs for more than 90 days? (Monitoring and Auditing)
Describe how you would detect unusual API activity in your AWS account. (Monitoring and Auditing)
How would you track and remediate non-compliant security group settings? (Monitoring and Auditing)
What steps would you take to receive alerts when S3 buckets become publicly accessible? (Monitoring and Auditing)
Suppose you are managing multiple AWS accounts and want to consolidate billing for cost savings. Which services/tools would you use to solve this? (Account Management)
Suppose you need to enforce tagging standards across all your AWS accounts. Which services/tools would you use to solve this? (Account Management)
Suppose you are setting up a new organization with separate environments for development, testing, and production. Which services/tools would you use to solve this? (Account Management)
Suppose you need to restrict API calls to AWS services to only be made from your company's network. Which services/tools would you use to solve this? (Access Management)
Suppose your organization wants to deny access to certain AWS services in specific regions. Which services/tools would you use to solve this? (Access Management)
Suppose you need to allow actions on EC2 instances only if they have a specific tag and the user has a specific tag. Which services/tools would you use to solve this? (Access Management)
Suppose you want to delegate permissions to a developer while ensuring they cannot grant themselves higher privileges. Which services/tools would you use to solve this? (Access Management)
Suppose you need to ensure that a user can only access S3, even if they have AdministratorAccess. Which services/tools would you use to solve this? (Access Management)
Suppose you are setting up permission boundaries for different IAM roles in your organization. Which services/tools would you use to solve this? (Access Management)
Suppose you want to prevent any actions in specific AWS regions. Which services/tools would you use to solve this? (Access Management)
Suppose you need to provide a single login for users across multiple AWS accounts and business applications. Which services/tools would you use to solve this? (Access Management)
Suppose you are integrating AWS IAM Identity Center with an external identity provider like Okta. Which services/tools would you use to solve this? (Access Management)
Suppose you need to grant developers full access to development accounts but only read-only access to production accounts. Which services/tools would you use to solve this? (Access Management)
Suppose you want to define fine-grained permissions based on user attributes such as department or job title. Which services/tools would you use to solve this? (Access Management)
Suppose you need to provide centralized security management for user accounts, computers, and other objects within your organization. Which services/tools would you use to solve this? (Access Management)
Suppose you want to create a trust connection between your on-premises Active Directory and AWS to share user authentication. Which services/tools would you use to solve this? (Access Management)
Suppose you need to proxy authentication requests from AWS to your on-premises Active Directory. Which services/tools would you use to solve this? (Access Management)
Suppose your organization does not have an on-premises Active Directory but needs a directory service for AWS. Which services/tools would you use to solve this? (Access Management)
Suppose you are transmitting sensitive data over a public network and want to prevent eavesdropping. Which services/tools would you use to solve this? (Encryption)
Suppose you need to securely store sensitive data on a server and ensure it is encrypted at rest. Which services/tools would you use to solve this? (Encryption)
Suppose you want to ensure that even the storage service cannot decrypt your sensitive data. Which services/tools would you use to solve this? (Encryption)
Suppose you are implementing a web application that requires secure login credentials to be transmitted over the internet. Which services/tools would you use to solve this? (Encryption)
Suppose you are tasked with preventing unauthorized access to data as it travels between a client and a server. Which services/tools would you use to solve this? (Encryption)
Suppose you need to encrypt data at rest in an EBS volume. Which services/tools would you use to solve this? (Encryption)
Suppose you want to audit every API call made to use your encryption keys. Which services/tools would you use to solve this? (Encryption)
Suppose you need to manage encryption keys and ensure they are automatically rotated every year. Which services/tools would you use to solve this? (Encryption)
Suppose you need to ensure data encrypted in one AWS region can be decrypted in another region without re-encrypting. Which services/tools would you use to solve this? (Encryption)
Suppose you are working with a global DynamoDB table and need to encrypt specific attributes such as Social Security numbers. Which services/tools would you use to solve this? (Encryption)
Suppose you need to achieve low-latency encryption and decryption for a globally distributed Aurora database. Which services/tools would you use to solve this? (Encryption)
Suppose you need to store configuration settings securely for your application. Which services/tools would you use to solve this? (Encryption)
Suppose you want to ensure that your application secrets are encrypted at rest and in transit. Which services/tools would you use to solve this? (Encryption)
Suppose you want to organize your parameters in a structured way to simplify IAM policy management. Which services/tools would you use to solve this? (Encryption)
Suppose you need to secure your website with HTTPS. Which services/tools would you use to solve this? (Encryption)
Suppose you want to ensure automatic renewal of your TLS certificates for your applications. Which services/tools would you use to solve this? (Encryption)
Suppose you need to validate your domain ownership using DNS for your public certificate. Which services/tools would you use to solve this? (Encryption)
Suppose you are setting up an API Gateway with global clients and need TLS encryption. Which services/tools would you use to solve this? (Encryption)
Suppose you are setting up a web application and want to protect it from DDoS attacks using edge services. Which services/tools would you use to solve this? (Encryption)
Suppose your backend is not compatible with CloudFront and you need to ensure DDoS protection. Which services/tools would you use to solve this? (Encryption)
Suppose you want to protect your EC2 instances from high traffic and malicious requests. Which services/tools would you use to solve this? (Encryption)
Suppose you need to block specific IP addresses and geographies from accessing your application. Which services/tools would you use to solve this? (Encryption)
Suppose you are designing an API that requires protection from DDoS attacks while hiding backend resources. Which services/tools would you use to solve this? (Encryption)
Suppose you need to create a security group rule that allows access only from a specific IP address. Which CIDR notation would you use? (Networking)
Suppose you are designing a large private network and need a vast range of IP addresses. Which private IP range would you choose and why? (Networking)
Suppose you need to allow multiple subnets within a VPC to communicate with each other. How would you use CIDR to configure this? (Networking)
Suppose you are tasked with setting up a home network. Which CIDR range would you use for your private IP addresses and why? (Networking)
Suppose you need to convert an IP range to CIDR notation for configuring a network. How would you approach this task? (Networking)
Suppose you need to ensure that your EC2 instances launched in a VPC have internet connectivity by default. Which VPC setting would you use? (Networking)
Suppose you want to configure an EC2 instance with both a public and a private IPv4 address. How would you achieve this in the default VPC? (Networking)
Suppose you are troubleshooting why your new EC2 instance in the default VPC cannot access the internet. Which VPC components should you check? (Networking)
Suppose you need to create a subnet that spans multiple Availability Zones for high availability. How would you configure this? (Networking)
Suppose you want to analyze traffic going in and out of your subnets for security purposes. Which feature would you enable? (Networking)
Suppose you need to allow incoming HTTP traffic to an EC2 instance. How would you configure the security group and NACL? (Networking)
Suppose you want to block a specific IP address from accessing any resources in a subnet. Which networking tool would you use, and how would you configure it? (Networking)
Suppose you have an EC2 instance that needs to communicate with a database in a private subnet. What configurations are necessary in the security groups and NACLs to allow this communication? (Networking)
Suppose you observe that your application is experiencing connectivity issues. How would you troubleshoot and ensure that both security groups and NACLs are correctly configured? (Networking)
Suppose you need to restrict outbound traffic from a specific subnet to a range of IP addresses. How would you achieve this using NACLs? (Networking)
Suppose you need to access Amazon S3 and DynamoDB from a private subnet without incurring additional costs. Which type of VPC endpoint would you use? (Networking)
Suppose you want to securely connect your on-premises data center to an AWS service without going through the public internet. Which VPC endpoint would you use? (Networking)
Suppose your application in a private subnet needs to access multiple AWS services privately. How would you configure the VPC endpoints? (Networking)
Suppose you observe high costs associated with NAT gateway usage for accessing AWS services. How can VPC endpoints help reduce these costs? (Networking)
Suppose you need to monitor and troubleshoot connectivity issues within your VPC. Which services/tools would you use to solve this? (Networking)
Suppose you want to capture detailed IP traffic information from your VPC and store it for later analysis. Which services/tools would you use to solve this? (Networking)
Suppose you notice an unusual amount of SSH traffic in your VPC. How would you set up an alert for this? (Networking)
Suppose you need to analyze VPC Flow Logs using SQL queries. Which services/tools would you use to solve this? (Networking)
Suppose you need to connect your AWS VPC to your corporate data center using a private connection. Which services/tools would you use to solve this? (Networking)
Suppose you have a customer gateway device with a public IP address. How would you establish a site-to-site VPN connection with your AWS VPC? (Networking)
Suppose your customer gateway device is behind a NAT device with a public IP. Which IP address should you use for the CGW in the site-to-site VPN connection? (Networking)
Suppose you need to enable communication between multiple customer networks and your AWS VPC using VPN connections. Which services/tools would you use to solve this? (Networking)
Suppose you need to ensure route propagation for a site-to-site VPN connection in your VPC. What steps would you take? (Networking)
Suppose you need to establish a private connection between your on-premises data center and AWS for high bandwidth data transfers. Which services/tools would you use to solve this? (Networking)
Suppose you need to connect to both private resources (e.g., EC2 instances) and public AWS resources (e.g., Amazon S3) from your on-premises data center. How would you configure Direct Connect? (Networking)
Suppose your organization needs a private connection to AWS but also requires data encryption for added security. What setup would you use? (Networking)
Suppose you need to connect multiple VPCs in different AWS regions to your on-premises data center using a single connection. Which services/tools would you use to solve this? (Networking)
Suppose you need to transfer data to AWS within a week, and there is no existing Direct Connect connection. What alternative solutions might you consider? (Networking)
Suppose you need to connect multiple VPCs in your AWS environment without establishing individual VPC peering connections. Which service would you use to solve this? (Networking)
Suppose your organization requires a private connection between your on-premises data center and multiple VPCs. How would you configure this using Direct Connect and Transit Gateway? (Networking)
Suppose you need to manage network traffic and control which VPCs can communicate with each other within your AWS environment. What tools and services would you use? (Networking)
Suppose your company needs to establish secure communication between multiple data centers and AWS VPCs using VPN connections. How would you optimize the bandwidth? (Networking)
Suppose you need to connect multiple VPCs without overlapping CIDRs. Which service would you use? (Networking)
Suppose you need to provide internet access to instances in a private subnet. How would you configure this using a NAT Gateway? (Networking)
Suppose you want to log and analyze the traffic in your VPC. Which service would you use, and how would you set it up? (Networking)
Suppose you need a secure connection between your on-premises data center and AWS that doesn't go over the public internet. Which service would you use? (Networking)
Suppose you need to enable private access to S3 and DynamoDB from within your VPC. Which VPC endpoint type would you use? (Networking)
Suppose you want to connect your VPC to multiple customer VPCs without using the public internet. Which service would you implement? (Networking)
Suppose you need to ensure minimal data loss in case of a disaster. Which strategy should you consider? (Disaster Recovery)
Suppose you want to minimize downtime during a disaster recovery. What factors should you consider? (Disaster Recovery)
Suppose you have a critical application that cannot afford significant downtime. Which disaster recovery strategy should you use? (Disaster Recovery)
Suppose you need to implement a cost-effective disaster recovery plan. What strategy would you recommend? (Disaster Recovery)
Suppose you are using an on-premise data center and want to leverage AWS for disaster recovery. What approach should you take? (Disaster Recovery)
Suppose you need to migrate a PostgreSQL database from on-premise to AWS RDS PostgreSQL. What tool would you use? (Disaster Recovery)
Suppose you want to migrate a database from Microsoft SQL Server to Amazon Aurora. What steps would you take? (Disaster Recovery)
Suppose you need to continuously replicate data from an on-premises Oracle database to an Amazon RDS MySQL database. What tools and methods would you use? (Disaster Recovery)
Suppose you need to ensure high availability and data redundancy during a database migration. How would you set this up? (Disaster Recovery)
Suppose you need to run Amazon Linux 2 on your on-premise infrastructure. What virtual machine software can you use? (Disaster Recovery)
Suppose you want to migrate existing VMs and applications from on-premise to EC2. Which AWS feature would you use? (Disaster Recovery)
Suppose you need to gather information about your on-premise servers for a migration plan. Which AWS service should you use? (Disaster Recovery)
Suppose you need to transfer 200 Terabytes of data to AWS using a 100 Mbps internet connection. How long will it take and is this method suitable? (Data Transfer)
Suppose you have provisioned a 1 Gbps Direct Connect line. How long will it take to transfer 200 Terabytes of data? (Data Transfer)
Suppose you need to transfer a large amount of data to AWS quickly and reliably. How can you use Snowball to achieve this? (Data Transfer)
Suppose you have ongoing data replication needs. Which AWS services and methods can you use for this purpose? (Data Transfer)
Suppose you need to combine Snowball with DMS for database migration. How does this process work? (Data Transfer)